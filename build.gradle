apply plugin: 'java'
apply plugin: 'spring-boot'

buildscript {
  repositories { jcenter() }
  dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
	classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.4.RELEASE")
  }
}
repositories {
    jcenter()
    maven()   { url 'http://repo.spring.io/snapshot' }
}

ext {
    springVersion = "4.1.7.RELEASE"
    springBootVersion = ":1.3.0.BUILD-SNAPSHOT"
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.2'
    compile 'org.apache.logging.log4j:log4j-api:2.2'
    compile 'org.apache.logging.log4j:log4j-core:2.2'
    compile 'org.projectlombok:lombok:1.16.2'
    compile "org.springframework:spring-core:${springVersion}"
    compile "org.springframework:spring-context:${springVersion}"
    compile "org.springframework:spring-webmvc:${springVersion}"
    compile 'org.hsqldb:hsqldb:2.3.2'
    compile 'com.zaxxer:HikariCP:2.3.5'
    compile "com.google.code.gson:gson:2.3.1"
    compile("org.springframework.boot:spring-boot-starter-web${springBootVersion}") { 
        exclude module: "spring-boot-starter-tomcat" 
        exclude module: "logback-classic"
    }
    compile("org.springframework.boot:spring-boot-starter${springBootVersion}") { 
        exclude module: "spring-boot-starter-logging"
        exclude module: "logback-classic"
    }
    compile("org.springframework.boot:spring-boot-starter-log4j${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-jetty${springBootVersion}")
    

    testCompile "junit:junit:4.11"
    testCompile "org.springframework:spring-test:${springVersion}"
    testCompile 'commons-lang:commons-lang:2.6'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
